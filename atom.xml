<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Song`s Blog</title>
  
  <subtitle>学习笔记博客</subtitle>
  <link href="https://songxwn.com/atom.xml" rel="self"/>
  
  <link href="https://songxwn.com/"/>
  <updated>2024-03-23T14:23:24.181Z</updated>
  <id>https://songxwn.com/</id>
  
  <author>
    <name>Song</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Juniper SRX 防火墙IPsec VPN 站点到站点</title>
    <link href="https://songxwn.com/Juniper-SRX-IPsec/"/>
    <id>https://songxwn.com/Juniper-SRX-IPsec/</id>
    <published>2024-03-22T02:55:54.000Z</published>
    <updated>2024-03-23T14:23:24.181Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;基于PNET-LAB模拟器，使用 vSRX-NG 23.4R1.9 镜像进行实验。&lt;/p&gt;
&lt;h2 id=&quot;实验需求&quot;&gt;&lt;a href=&quot;#实验需求&quot; class=&quot;headerlink&quot; title=&quot;实验需求&quot;&gt;&lt;/a&gt;实验需求&lt;/h2&gt;&lt;p&gt;两台防火墙配置基于路由的 IPsec VPN，打通两边站点内网。&lt;/p&gt;
&lt;p&gt;ISP 路由器使用Cisco IOS模拟。&lt;/p&gt;
&lt;p&gt;基础配置参考：&lt;a href=&quot;https://songxwn.com/Juniper-SRX-snat/&quot; title=&quot;https://songxwn.com/Juniper-SRX-snat/&quot;&gt;https://songxwn.com/Juniper-SRX-snat/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Juniper" scheme="https://songxwn.com/categories/Juniper/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="nat" scheme="https://songxwn.com/tags/nat/"/>
    
    <category term="Juniper" scheme="https://songxwn.com/tags/Juniper/"/>
    
    <category term="SRX" scheme="https://songxwn.com/tags/SRX/"/>
    
    <category term="IPsec" scheme="https://songxwn.com/tags/IPsec/"/>
    
  </entry>
  
  <entry>
    <title>Juniper SRX 防火墙基础上网配置</title>
    <link href="https://songxwn.com/Juniper-SRX-snat/"/>
    <id>https://songxwn.com/Juniper-SRX-snat/</id>
    <published>2024-03-22T01:55:54.000Z</published>
    <updated>2024-03-22T06:23:05.198Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;基于PNET-LAB模拟器，使用 vSRX-NG 23.4R1.9 镜像进行实验。&lt;/p&gt;
&lt;h2 id=&quot;实验需求&quot;&gt;&lt;a href=&quot;#实验需求&quot; class=&quot;headerlink&quot; title=&quot;实验需求&quot;&gt;&lt;/a&gt;实验需求&lt;/h2&gt;&lt;p&gt;配置WAN口 LAN口，实现基础的上网功能。配置NAT、DHCP。&lt;/p&gt;
&lt;p&gt;ISP 路由器使用Cisco IOS模拟，与SRX对接口配置 1.1.1.2，Lookback0配置114.114.114.114&amp;#x2F;32&lt;/p&gt;</summary>
    
    
    
    <category term="Juniper" scheme="https://songxwn.com/categories/Juniper/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="nat" scheme="https://songxwn.com/tags/nat/"/>
    
    <category term="Juniper" scheme="https://songxwn.com/tags/Juniper/"/>
    
    <category term="SRX" scheme="https://songxwn.com/tags/SRX/"/>
    
  </entry>
  
  <entry>
    <title>Frostmourne - Elasticsearch源日志告警配置</title>
    <link href="https://songxwn.com/frostmourne_use/"/>
    <id>https://songxwn.com/frostmourne_use/</id>
    <published>2024-03-12T01:48:00.000Z</published>
    <updated>2024-03-12T02:47:16.122Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;配置Frostmourne 接入Elasticsearch源进行日志匹配告警，并静默规则，告警消息发送到企业微信，告警信息使用Markdown。&lt;/p&gt;
&lt;p&gt;部署安装教程查看： &lt;a href=&quot;https://songxwn.com/frostmourne_install&quot; title=&quot;https://songxwn.com/frostmourne_install&quot;&gt;https://songxwn.com/frostmourne_install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ELK 安装教程：&lt;a href=&quot;https://songxwn.com/elk/&quot; title=&quot;https://songxwn.com/elk/&quot;&gt;https://songxwn.com/elk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ELK集群：&lt;a href=&quot;https://songxwn.com/elk_cluster/&quot; title=&quot;https://songxwn.com/elk_cluster/&quot;&gt;https://songxwn.com/elk_cluster&amp;#x2F;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://songxwn.com/categories/linux/"/>
    
    <category term="ELK" scheme="https://songxwn.com/categories/linux/ELK/"/>
    
    
    <category term="Linux" scheme="https://songxwn.com/tags/Linux/"/>
    
    <category term="elk" scheme="https://songxwn.com/tags/elk/"/>
    
    <category term="syslog" scheme="https://songxwn.com/tags/syslog/"/>
    
    <category term="wecom" scheme="https://songxwn.com/tags/wecom/"/>
    
  </entry>
  
  <entry>
    <title>什么是M-LAG？ 为什么需要M-LAG</title>
    <link href="https://songxwn.com/M-LAG/"/>
    <id>https://songxwn.com/M-LAG/</id>
    <published>2024-03-10T18:44:10.000Z</published>
    <updated>2024-03-11T08:38:43.100Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是M-LAG&quot;&gt;&lt;a href=&quot;#什么是M-LAG&quot; class=&quot;headerlink&quot; title=&quot;什么是M-LAG ?&quot;&gt;&lt;/a&gt;什么是M-LAG ?&lt;/h2&gt;&lt;p&gt;M-LAG（Multichassis Link Aggregation Group）提供一种跨设备链路聚合的技术。M-LAG通过将两台接入交换机以同一个状态和用户侧设备或服务器进行跨设备的链路聚合，把链路的可靠性从单板级提升到设备级。同时，由于M-LAG设备可以单独升级，保证了业务流量的稳定性，使得M-LAG技术在数据中心网络广泛应用。&lt;/p&gt;
&lt;p&gt;PS：M-LAG 技术虽然大家都有，但各大品牌并不互相兼容。&lt;/p&gt;</summary>
    
    
    
    <category term="network" scheme="https://songxwn.com/categories/network/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="datacom" scheme="https://songxwn.com/tags/datacom/"/>
    
    <category term="M-LAG" scheme="https://songxwn.com/tags/M-LAG/"/>
    
    <category term="LACP" scheme="https://songxwn.com/tags/LACP/"/>
    
  </entry>
  
  <entry>
    <title>VMware 集群-虚拟机配置反亲和性（互斥）</title>
    <link href="https://songxwn.com/VMware-anti-affinity/"/>
    <id>https://songxwn.com/VMware-anti-affinity/</id>
    <published>2024-03-08T01:48:35.000Z</published>
    <updated>2024-03-08T06:05:25.754Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;为实现应用系统的冗余，经常会双机或者多机部署（如数据库集群等）。在VMware 集群里面，要保证不同应用集群的节点虚拟机&lt;strong&gt;在不同的物理宿主机上&lt;/strong&gt;，防止单个宿主机故障，影响多个应用集群的节点故障。（尤其在开启RDS的集群上）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;此功能基本 vCenter 6.5 以上就有。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS：其实就是鸡蛋不要同时放在一个篮子里。&lt;/p&gt;</summary>
    
    
    
    <category term="vmware" scheme="https://songxwn.com/categories/vmware/"/>
    
    
    <category term="VMware" scheme="https://songxwn.com/tags/VMware/"/>
    
    <category term="HA" scheme="https://songxwn.com/tags/HA/"/>
    
    <category term="Virtualization" scheme="https://songxwn.com/tags/Virtualization/"/>
    
    <category term="vCenter" scheme="https://songxwn.com/tags/vCenter/"/>
    
  </entry>
  
  <entry>
    <title>Juniper 设备配置日志过滤-过滤license告警日志</title>
    <link href="https://songxwn.com/Juniper-log-match/"/>
    <id>https://songxwn.com/Juniper-log-match/</id>
    <published>2024-03-07T11:04:15.000Z</published>
    <updated>2024-03-07T10:11:19.135Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Juniper QFX5110 系列交换机是支持OSPF ISIS BGP MPLS等高级路由功能的，但需要对应的license许可。虽然你没有license也可以用，但日志会持续打印设备没有license，影响日常排障、占用过多的存储、也可能影响稳定性。&lt;/p&gt;
&lt;p&gt;所以需要将其过滤掉，不写入到本地存储和发送到syslog服务器。&lt;/p&gt;</summary>
    
    
    
    <category term="Juniper" scheme="https://songxwn.com/categories/Juniper/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="syslog" scheme="https://songxwn.com/tags/syslog/"/>
    
    <category term="Juniper" scheme="https://songxwn.com/tags/Juniper/"/>
    
  </entry>
  
  <entry>
    <title>HCIE Datacom-02.3 BGP高级特性-RR路由反射器组网</title>
    <link href="https://songxwn.com/BGP-RR/"/>
    <id>https://songxwn.com/BGP-RR/</id>
    <published>2024-03-07T01:23:23.000Z</published>
    <updated>2024-03-07T06:50:52.704Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;路由反射器简介&quot;&gt;&lt;a href=&quot;#路由反射器简介&quot; class=&quot;headerlink&quot; title=&quot;路由反射器简介&quot;&gt;&lt;/a&gt;路由反射器简介&lt;/h1&gt;&lt;p&gt;引入路由反射器，可以简化IBGP全互联的需求和配置，也可以减轻网络和CPU的负担、和不必要的BGP Update。&lt;/p&gt;
&lt;p&gt;相对于BGP联盟也更利于排错。&lt;/p&gt;
&lt;p&gt;PS：iBGP全互联是因为iBGP的水平分割防环机制。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引入路由反射器之后存在3种角色：&lt;/p&gt;
&lt;p&gt;RR（Route Reflector）： 路由反射器&lt;/p&gt;
&lt;p&gt;Client：客户机&lt;/p&gt;
&lt;p&gt;Non-Client：非客户机&lt;br&gt;PS：是否为客户机，是由RR指定的。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Datacom" scheme="https://songxwn.com/categories/Datacom/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="datacom" scheme="https://songxwn.com/tags/datacom/"/>
    
    <category term="BGP" scheme="https://songxwn.com/tags/BGP/"/>
    
    <category term="BGP RR" scheme="https://songxwn.com/tags/BGP-RR/"/>
    
  </entry>
  
  <entry>
    <title>HCIE Datacom-01-LAB-OSPF快速收敛和BGP联动</title>
    <link href="https://songxwn.com/ospf-frr-lab/"/>
    <id>https://songxwn.com/ospf-frr-lab/</id>
    <published>2024-03-04T23:50:49.000Z</published>
    <updated>2024-03-05T08:18:17.119Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;配置OSPF FRR+BFD+智能定时器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OSPF与BGP联动&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;FRR 快速重路由，提前计算出备份路径，当链路故障时候，将流量快速切换到备份路径上。将中断时间减少到50ms内。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BFD（Bidirectional Forwarding Detection，双向转发检测）是一种基于RFC 5880标准的高速故障检测机制，两个系统建立BFD会话后，在它们之间的通道上周期性地发送BFD报文，如果一方在协商的检测时间内没有接收到BFD报文，则认为这条双向通道上发生了故障。上层协议通过BFD感知到链路故障后可以及时采取措施，进行故障恢复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;智能定时器，可以控制加快LSA的生成的接收和根据LSDB计算的路由生成，从而减少因链路变化而造成中断时间。（但调低间隔会占用多余的设备资源）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BGP联动特性，当有新的设备加入到网络中，或者设备重启时，可能会出现在BGP收敛期间内网络流量丢失的现象。这是由于IGP收敛速度比BGP快而造成的。&lt;/p&gt;
&lt;p&gt;使能之后OSPF与BGP联动特性的设备会在设定的联动时间内（BGP收敛完成前）保持为Stub路由器，也就是说，该设备发布的LSA中的链路度量值为最大值（65535），从而告知其它OSPF设备不要使用这个路由器来转发数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Datacom" scheme="https://songxwn.com/categories/Datacom/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="datacom" scheme="https://songxwn.com/tags/datacom/"/>
    
    <category term="ospf" scheme="https://songxwn.com/tags/ospf/"/>
    
    <category term="lab" scheme="https://songxwn.com/tags/lab/"/>
    
  </entry>
  
  <entry>
    <title>Rsyslog 配置接收Syslog - 轻量化日志存储</title>
    <link href="https://songxwn.com/Rsyslog-syslog/"/>
    <id>https://songxwn.com/Rsyslog-syslog/</id>
    <published>2024-02-27T01:38:34.000Z</published>
    <updated>2024-03-05T00:51:20.213Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;基于Rocky LInux 8 搭建，也适用于其他RHEL8-9衍生发行版。&lt;/p&gt;
&lt;p&gt;注意关闭Selinux和配置防火墙。&lt;/p&gt;
&lt;p&gt;日志文件存放主目录为 &amp;#x2F;var&amp;#x2F;syslog&amp;#x2F;下，会自动创建发日志主机IP的文件夹，并将日志存放在每天创建的log文件里面。&lt;/p&gt;
&lt;p&gt;路径格式 &amp;#x2F;var&amp;#x2F;log&amp;#x2F;主机IP地址&amp;#x2F;主机IP地址_年-月-日.log&lt;/p&gt;
&lt;p&gt;如：192.168.0.1_2038-02-27.log&lt;/p&gt;
&lt;p&gt;以文本存储方式虽然不便于搜索，但可以按照每台每天的日志全部下载，Rsyslog相对于ELK也更&lt;strong&gt;轻量化&lt;/strong&gt;、简单化、占用资源低。&lt;/p&gt;
&lt;p&gt;也可以配置定时任务，压缩历史日志，以节省存储空间。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://songxwn.com/categories/Linux/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="Linux" scheme="https://songxwn.com/tags/Linux/"/>
    
    <category term="syslog" scheme="https://songxwn.com/tags/syslog/"/>
    
    <category term="log" scheme="https://songxwn.com/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>盛科交换机Zabbix SNMP硬件监控模板</title>
    <link href="https://songxwn.com/Centec-Zabbix-SNMP/"/>
    <id>https://songxwn.com/Centec-Zabbix-SNMP/</id>
    <published>2024-02-20T01:15:25.000Z</published>
    <updated>2024-02-20T02:36:29.900Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;适用于盛科使用CentecOS系列的交换机，如E580&amp;#x2F;E530&amp;#x2F;E680等。&lt;/p&gt;
&lt;p&gt;1、自动扫描电源，并监测状态。&lt;br&gt;2、自动扫描风扇，并监测状态。&lt;br&gt;3、自动扫描温度传感器，并监测状态，自动匹配最高和最低温度告警，&lt;br&gt;4、监测CPU、内存等状态。&lt;br&gt;5、获取开机时间、序列号、交换机系统版本。&lt;br&gt;6、自动扫描光模块，并记录其收光状态。（无告警）&lt;/p&gt;</summary>
    
    
    
    <category term="Zabbix" scheme="https://songxwn.com/categories/Zabbix/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="snmp" scheme="https://songxwn.com/tags/snmp/"/>
    
    <category term="Zabbix" scheme="https://songxwn.com/tags/Zabbix/"/>
    
    <category term="centec" scheme="https://songxwn.com/tags/centec/"/>
    
  </entry>
  
  <entry>
    <title>猪圈Pigsty-PG私有RDS集群搭建教程</title>
    <link href="https://songxwn.com/Pigsty-PG-RDS/"/>
    <id>https://songxwn.com/Pigsty-PG-RDS/</id>
    <published>2024-02-18T01:32:51.000Z</published>
    <updated>2024-02-26T06:40:26.838Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Pigsty 是一个更好的本地自建且开源 &lt;strong&gt;RDS&lt;/strong&gt; for PostgreSQL 替代，具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开箱即用的 &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; 发行版，深度整合地理、时序、分布式、图、向量、分词、AI等 150 余个&lt;a href=&quot;https://pigsty.cc/doc/#/zh/README#/zh/PGSQL-EXTENSION&quot;&gt;扩展插件&lt;/a&gt;！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行于裸操作系统之上，无需容器支持，支持主流操作系统： EL7&amp;#x2F;8&amp;#x2F;9 及其衍生发行版， Ubuntu 20.04&amp;#x2F;22.04 以及 Debian 11&amp;#x2F;12。(推荐使用Rocky Linux)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于现代的 &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt; 与 &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt; 技术栈，提供令人惊艳，无可比拟的数据库观测能力：&lt;a href=&quot;https://github.com/Vonng/pigsty/wiki/Gallery&quot;&gt;画廊&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://demo.pigsty.cc/&quot;&gt;演示站点&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于 &lt;a href=&quot;https://patroni.readthedocs.io/en/latest/&quot;&gt;patroni&lt;/a&gt;， &lt;a href=&quot;http://www.haproxy.org/&quot;&gt;haproxy&lt;/a&gt;， 与&lt;a href=&quot;https://etcd.io/&quot;&gt;etcd&lt;/a&gt;，打造故障自愈的高可用架构：硬件故障自动切换，流量无缝衔接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于 &lt;a href=&quot;https://pgbackrest.org/&quot;&gt;pgBackRest&lt;/a&gt; 与可选的 &lt;a href=&quot;https://min.io/&quot;&gt;MinIO&lt;/a&gt; 集群提供开箱即用的 PITR 时间点恢复，为软件缺陷与人为删库兜底。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于 &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; 提供声明式的 API 对复杂度进行抽象，以 &lt;strong&gt;Database-as-Code&lt;/strong&gt; 的方式极大简化了日常运维管理操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pigsty用途广泛，可用作完整应用运行时，开发演示数据&amp;#x2F;可视化应用，大量使用 PG 的软件可用 &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; 模板一键拉起。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提供基于 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; 的本地开发测试沙箱环境，与基于 &lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt; 的云端自动部署方案，开发测试生产保持环境一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部署并监控专用的 &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;（主从，哨兵，集群），MinIO，Etcd，Haproxy，MongoDB（&lt;a href=&quot;https://www.ferretdb.io/&quot;&gt;FerretDB）&lt;/a&gt; 集群&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://pigsty.cc/doc/#/zh/README&quot; title=&quot;https://pigsty.cc/doc/#/zh/README&quot;&gt;https://pigsty.cc/doc/#/zh/README&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/Vonng/pigsty&quot; title=&quot;https://github.com/Vonng/pigsty&quot;&gt;https://github.com/Vonng/pigsty&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Pigsty" scheme="https://songxwn.com/categories/Pigsty/"/>
    
    
    <category term="dns" scheme="https://songxwn.com/tags/dns/"/>
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="RDS" scheme="https://songxwn.com/tags/RDS/"/>
    
    <category term="PostgreSQL" scheme="https://songxwn.com/tags/PostgreSQL/"/>
    
    <category term="Database" scheme="https://songxwn.com/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Grafana 配置实时开通的LDAP认证-基于AD</title>
    <link href="https://songxwn.com/Grafana-LDAP-AD/"/>
    <id>https://songxwn.com/Grafana-LDAP-AD/</id>
    <published>2024-02-09T05:02:59.000Z</published>
    <updated>2024-02-09T05:19:05.460Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;本教程适用于9-10版本的Grafana，域控（AD）使用Windows Server 2022搭建，域控等级为 2016。&lt;/p&gt;
&lt;p&gt;域控域名为 songxwn.com&lt;/p&gt;
&lt;p&gt;最终实现AD用户统一认证，统一改密，Grafana用户自动添加。权限由Grafana控制&lt;/p&gt;</summary>
    
    
    
    <category term="Grfana" scheme="https://songxwn.com/categories/Grfana/"/>
    
    
    <category term="LDAP" scheme="https://songxwn.com/tags/LDAP/"/>
    
    <category term="AD" scheme="https://songxwn.com/tags/AD/"/>
    
    <category term="grafana" scheme="https://songxwn.com/tags/grafana/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix 配置实时开通的LDAP认证-基于AD</title>
    <link href="https://songxwn.com/zabbix-LDAP-JIT/"/>
    <id>https://songxwn.com/zabbix-LDAP-JIT/</id>
    <published>2024-02-07T09:02:59.000Z</published>
    <updated>2024-02-07T09:33:46.409Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;本教程适用于6.4-7.0+版本的Zabbix，域控（AD）使用Windows Server 2022搭建，域控等级为 2016。&lt;/p&gt;
&lt;p&gt;域控域名为 songxwn.com&lt;/p&gt;
&lt;p&gt;最终实现AD用户统一认证，统一改密，Zabbix用户自动添加。（6.4之前不支持）&lt;/p&gt;</summary>
    
    
    
    <category term="Zabbix" scheme="https://songxwn.com/categories/Zabbix/"/>
    
    
    <category term="zabbix" scheme="https://songxwn.com/tags/zabbix/"/>
    
    <category term="LDAP" scheme="https://songxwn.com/tags/LDAP/"/>
    
    <category term="AD" scheme="https://songxwn.com/tags/AD/"/>
    
  </entry>
  
  <entry>
    <title>智能无损网络 - 华为</title>
    <link href="https://songxwn.com/RDMA/"/>
    <id>https://songxwn.com/RDMA/</id>
    <published>2024-02-04T14:30:46.000Z</published>
    <updated>2024-02-04T14:35:57.102Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;p&gt;智能无损网络是基于PFC优先级流控机制，结合智能化拥塞控制技术，使以太网满足分布式高性能应用无丢包、低时延、高吞吐诉求的能力。&lt;/p&gt;
&lt;p&gt;本文档介绍了智能无损网络的配置，具体包括PFC优先级流量控制、无损队列的缓存空间优化、无损队列的动态ECN门限、无损队列的AI ECN门限、快速ECN拥塞标记、快速CNP拥塞通知、无损队列的大小流区分调度、动态负载分担和网算一体。&lt;/p&gt;</summary>
    
    
    
    <category term="network" scheme="https://songxwn.com/categories/network/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="RoCEv2" scheme="https://songxwn.com/tags/RoCEv2/"/>
    
    <category term="RDMA" scheme="https://songxwn.com/tags/RDMA/"/>
    
  </entry>
  
  <entry>
    <title>盛科交换机配置基于DSCP的RoCEv2-无损网络</title>
    <link href="https://songxwn.com/switch-ROCEv2-DSCP/"/>
    <id>https://songxwn.com/switch-ROCEv2-DSCP/</id>
    <published>2024-02-04T10:47:24.000Z</published>
    <updated>2024-02-04T10:02:25.701Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;当前HPC高性能计算、分布式存储、AI人工智能等应用采用RoCEv2网络替代传统的TCP&amp;#x2F;IP网络，来降低CPU的处理和延迟，提升应用的性能。然而，这些分布式高性能应用的特点是“多打一”的Incast流量模型，对于以太交换机，Incast流量易造成交换机内部队列缓存的瞬时突发拥塞甚至丢包，将会带来应用时延的增加和吞吐的下降，从而损害分布式应用的性能。因此，针对RoCEv2流量实现的智能流量分析功能，将对设备经过的RoCEv2流量通过ACL匹配特征报文，上送至TAP后分析其丢包、时延、吞吐和路径信息，实时监控RoCEv2网络状态。&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;RDMA（Remote Direct Memory Access），远程直接内存访问功能，用于InfiniBand网络，是一种直接内存访问技术，它将数据直接从一台计算机的内存传输到另一台计算机，数据从一个系统快速移动到远程系统存储器中，无需双方操作系统的介入，不需要经过处理器耗时的处理，最终达到高带宽、低延迟和低资源利用率的效果。&lt;/p&gt;
&lt;p&gt;RoCE（RDMA over Converged Ethernet），允许应用通过以太网实现远程内存访问的网络协议，是将RDMA技术运用到以太网上的协议。目前RoCE有两个协议版本，RoCEv1和RoCEv2。&lt;/p&gt;</summary>
    
    
    
    <category term="network" scheme="https://songxwn.com/categories/network/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="vmware" scheme="https://songxwn.com/tags/vmware/"/>
    
    <category term="rdma" scheme="https://songxwn.com/tags/rdma/"/>
    
    <category term="centec" scheme="https://songxwn.com/tags/centec/"/>
    
    <category term="RoCEv2" scheme="https://songxwn.com/tags/RoCEv2/"/>
    
  </entry>
  
  <entry>
    <title>关闭Ubuntu 默认开启的自动安全更新</title>
    <link href="https://songxwn.com/Ubuntu-auto-update/"/>
    <id>https://songxwn.com/Ubuntu-auto-update/</id>
    <published>2024-01-26T10:42:59.000Z</published>
    <updated>2024-02-04T10:35:07.686Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Ubuntu 和 Debian 应该从很早版本开始预装unattended-upgrades 包，并开启自动更新有&lt;strong&gt;安全问题&lt;/strong&gt;的软件包。&lt;/p&gt;
&lt;p&gt;（最小化安装不会安装此包）&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://songxwn.com/categories/Linux/"/>
    
    
    <category term="linux" scheme="https://songxwn.com/tags/linux/"/>
    
    <category term="Ubuntu" scheme="https://songxwn.com/tags/Ubuntu/"/>
    
    <category term="apt" scheme="https://songxwn.com/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix 中文图形乱码-使用开源字体</title>
    <link href="https://songxwn.com/zabbix-fonts/"/>
    <id>https://songxwn.com/zabbix-fonts/</id>
    <published>2024-01-26T09:02:59.000Z</published>
    <updated>2024-01-26T09:34:50.730Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Zabbix 图形默认安装使用的字体是英文字体，显示中文会乱码，需要替换为中文字体。&lt;/p&gt;</summary>
    
    
    
    <category term="Zabbix" scheme="https://songxwn.com/categories/Zabbix/"/>
    
    
    <category term="zabbix" scheme="https://songxwn.com/tags/zabbix/"/>
    
    <category term="fonts" scheme="https://songxwn.com/tags/fonts/"/>
    
  </entry>
  
  <entry>
    <title>VMware vCenter（VCSA） 配置静态路由</title>
    <link href="https://songxwn.com/VMware-vCenter-IProute/"/>
    <id>https://songxwn.com/VMware-vCenter-IProute/</id>
    <published>2024-01-26T04:57:26.000Z</published>
    <updated>2024-01-26T05:48:06.642Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本教程适用于基于Linux的VCSA版本，Linux版本是基于VMware开源的Linux发行版 VMware Photon OS来作为底层系统的。&lt;br&gt;首先需要在后台开启SSH和Shell访问。&lt;/p&gt;</summary>
    
    
    
    <category term="vmware" scheme="https://songxwn.com/categories/vmware/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="esxi" scheme="https://songxwn.com/tags/esxi/"/>
    
    <category term="vmware" scheme="https://songxwn.com/tags/vmware/"/>
    
    <category term="vcenter" scheme="https://songxwn.com/tags/vcenter/"/>
    
  </entry>
  
  <entry>
    <title>VMware vSwitch - 水平分割的上联接口</title>
    <link href="https://songxwn.com/VMware-vSwitch-uplink/"/>
    <id>https://songxwn.com/VMware-vSwitch-uplink/</id>
    <published>2024-01-24T00:57:26.000Z</published>
    <updated>2024-01-26T04:53:56.010Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;我在使用 VMware ESXi 的时候发现vSwitch 两个以上的上联端口，连接同一个交换机，或者同一个二层广播域。&lt;/p&gt;
&lt;p&gt;且没有配置LACP或STP等协议，但并没有造成二层环路。这是因为vSwitch 特殊的上联接口的水平分割。(和iBGP的水平分割很像)&lt;/p&gt;
&lt;p&gt;即从一个上联端口发过来的报文，不会转发到其他上联端口。（vSwitch的上联端口是强定义的）&lt;/p&gt;
&lt;p&gt;（包括虚拟标准交换机VSS 和 虚拟分布式交换机 VDS）&lt;/p&gt;</summary>
    
    
    
    <category term="vmware" scheme="https://songxwn.com/categories/vmware/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="esxi" scheme="https://songxwn.com/tags/esxi/"/>
    
    <category term="vmware" scheme="https://songxwn.com/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>tun2proxy -SOCKS5等代理转换为TUN口</title>
    <link href="https://songxwn.com/tun2proxy/"/>
    <id>https://songxwn.com/tun2proxy/</id>
    <published>2024-01-05T00:48:59.000Z</published>
    <updated>2024-01-05T03:53:38.132Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;tun2proxy 是一个基于 smoltcp 在 Linux 上 通过HTTP 和 SOCKS 代理的创建隧道接口的项目，使用Rust 语言开发。&lt;/p&gt;
&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;HTTP 代理支持（无身份验证、基本身份验证和摘要身份验证）&lt;/li&gt;
&lt;li&gt;SOCKS4 和 SOCKS5 支持（无身份验证、用户名&amp;#x2F;密码身份验证）&lt;/li&gt;
&lt;li&gt;SOCKS4a和SOCKS5h支持（通过虚拟DNS功能）&lt;/li&gt;
&lt;li&gt;用于路由所有流量的自动化配置&lt;/li&gt;
&lt;li&gt;IPv4 和 IPv6 支持&lt;/li&gt;
&lt;li&gt;SOCKS5 UDP 支持&lt;/li&gt;
&lt;li&gt;本机支持通过 TCP 代理 DNS&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://songxwn.com/categories/Linux/"/>
    
    
    <category term="network" scheme="https://songxwn.com/tags/network/"/>
    
    <category term="Linux" scheme="https://songxwn.com/tags/Linux/"/>
    
    <category term="Tun" scheme="https://songxwn.com/tags/Tun/"/>
    
    <category term="Socks5" scheme="https://songxwn.com/tags/Socks5/"/>
    
    <category term="HTTP_Proxy" scheme="https://songxwn.com/tags/HTTP-Proxy/"/>
    
  </entry>
  
</feed>
